---
- apk:
    name:
      - nftables
      - ulogd
      - docker
      - py2-pip # le sigh

- pip:
    name: docker
    
- name: ulogd.conf
  copy:
    src: ulogd.conf
    dest: /etc/ulogd.conf
  notify: reload ulogd
    
- name: firewall.nft
  copy:
    src: firewall.nft
    dest: /etc/firewall.nft
  notify: reload nftables

- name: DOCKER_OPTS
  lineinfile:
    dest: /etc/conf.d/docker
    regexp: '^#?\s*DOCKER_OPTS'
    line: 'DOCKER_OPTS="--iptables=false"'
  notify: restart docker

- name: save_on_stop = no
  lineinfile:
    dest: /etc/conf.d/nftables
    regexp: '^#?\s*save_on_stop'
    line: 'save_on_stop="no"'
  notify: restart nftables
- name: enable_forwarding = yes
  lineinfile:
    dest: /etc/conf.d/nftables
    regexp: '^#?\s*enable_forwarding'
    line: 'enable_forwarding="yes"'
  notify: restart nftables

# TODO: manual install of https://github.com/TrilliumIT/docker-zfs-plugin
# built with GOOS=linux CGO_ENABLED=0 to /usr/local/bin/docker-zfs-plugin
- name: /etc/init.d/docker-zfs-plugin
  copy:
    src: docker-zfs-plugin
    dest: /etc/init.d/docker-zfs-plugin
    mode: 0755
- name: docker need docker-zfs-plugin
  lineinfile:
    path: /etc/conf.d/docker
    line: "rc_need=docker-zfs-plugin"

- name: enable nftables, ulogd and docker
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - nftables
    - ulogd
    - docker-zfs-plugin
    - docker

- meta: flush_handlers

- name: add filippo to docker
  replace:
    dest: /etc/group
    regexp: '^docker:x:(\d+):[^:\n]*$'
    replace: 'docker:x:\1:filippo'

- docker_network:
    name: docker.home.arpa
    driver_options:
      com.docker.network.bridge.name: docker1
    ipam_options:
      subnet: '172.28.0.0/16'

- name: sync /var/cache/docker
  synchronize:
    src: ../docker/
    dest: /var/cache/docker/

- docker_image:
    name: "frood.home.arpa/{{ item.name }}"
    path: "/var/cache/docker/{{ item.name }}"
    tag: "{{ item.tag }}"
    network_mode: docker.home.arpa
    force: "{{ item.force | default(omit) }}"
  with_items:
    - { name: zcash, tag: v1 }
    - { name: uredir, tag: v1 }

- docker_container:
    name: "{{ item.name }}"
    image: "{{ item.image | default('frood.home.arpa/' + item.name) }}:{{ item.tag }}"
    init: yes
    interactive: "{{ item.it | default(omit) }}"
    read_only: "{{ item.ro | default(True) }}"
    tty: "{{ item.it | default(omit) }}"
    volume_driver: zfs
    restart_policy: always
    purge_networks: yes
    networks:
      - name: docker.home.arpa
        ipv4_address: "{{ item.ip | default(None) }}"
    volumes: "{{ item.volumes | default(omit) }}"
    env: "{{ item.env | default(omit) }}"
    hostname: "{{ item.hostname | default(omit) }}"
    command: "{{ item.command | default(omit) }}"
    state: "{{ 'started' if item.get('run', True) else 'stopped' }}"
  with_items:
    - { name: zcash, tag: v1, it: true, volumes: [ "zcash-data:/home/zcash/zcash-data:rw" ], run: no }
    - { name: uredir, tag: v1, command: "-n :53 127.0.0.11:53", ip: "172.28.100.1" }
    - name: plex
      image: plexinc/pms-docker
      tag: public
      ro: false
      ip: 172.28.100.2
      hostname: Hooloovoo
      volumes:
        - "/tank/plex/media:/data"
        - "/tank/plex/config:/config"
        - "/tank/plex/transcode:/transcode"
      env:
        TZ: America/New_York
        PLEX_CLAIM: claim-uQoth8ibCsevtGYCbi3P # expired, from https://www.plex.tv/claim/
